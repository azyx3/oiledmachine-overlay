#!/bin/bash

# This package just checks but doesn't do updating.  Portage is responsible for that
# to allow for the package manager to erase update cruft created by npm.
#
# This script is a /etc/portage/postsync.d/ hook handler
#
# It is designed to check every registered npm package and it's bundled dependencies.
# If it finds a package with a security vulerability, it will suggest to the user
# to re-emerge the package.

H_INFO="
Copyright 2019 Orson Teodoro
License: Dual licensed under MIT or GPL2
"
H_HELP="
$(basename $BASH_SOURCE) <args>

Generates a package set for you to update affected packages.

args:
	-h, --help		prints all the supported commands
	-ver, --version		version info
	-v, --verbose		prints the full vulnerability report
	-d, --debug		prints debug messages
"

G_VERBOSE=""
G_DEBUG=""

for arg in $@ ; do
	case "$arg" in
		--version|-version|-ver)
			echo "${H_INFO}"
			exit
			;;
		--help|-help|-h)
			echo "${H_HELP}"
			exit
			;;
		--verbose|-verbose|-v)
			G_VERBOSE="1"
			;;
		--debug|-debug|-d)
			G_DEBUG="1"
			G_VERBOSE="1"
			;;
	esac
done

function einfo() {
	echo ">>> $1"
}

function dinfo() {
	case "$G_DEBUG" in
		1)
			echo ">>> $1"
			;;
		*)
			true
			;;
	esac
}

# location of registered npm packages
NPM_APPS="/var/lib/portage/npm-packages"
INSECURE_SET_DIR="/etc/portage/sets/"
INSECURE_SET_FN="npm-security-update"
INSECURE_SET_FP="${INSECURE_SET_DIR}/${INSECURE_SET_FN}"

CHECK_PERIOD="$((60*60*24*1))" #seconds

function init() {
	mkdir -p "${INSECURE_SET_DIR}"
	touch "${INSECURE_SET_FP}"
}

function check() {
	echo "Checking npm packages and Electron apps for vulnerabilities please wait..."
	echo "" > "${INSECURE_SET_FP}"

	while read -r line ; do
		local p=$(echo "${line}" | cut -f1)
		local path=$(echo "${line}" | cut -f2)

		pushd "${path}" >/dev/null
		if [[ "${G_VERBOSE}" == "1" ]]; then
			echo -e "\n>>> Checking ${p}"
			npm audit
		else
			npm audit >/dev/null
		fi
		if [[ "$?" == "0" ]] ; then
			dinfo "Package ${p} is good."
		else
			dinfo "Package ${p} needs to be updated and has been placed in the @${INSECURE_SET_FN} slot."
			echo "${p}" >> "${INSECURE_SET_FP}"
		fi
		popd >/dev/null
	done < "${NPM_APPS}"
}

function summary() {
	# remove blank lines
	sed -i '/^$/d' "${INSECURE_SET_FP}"

	local n_insecure=$(wc -l ${INSECURE_SET_FP} | cut -f1 -d' ')
	local fsz=$(wc -c ${INSECURE_SET_FP} | cut -f1 -d' ')
	dinfo "n_insecure=$n_insecure"
	dinfo "fsz=$fsz"
	if (( $n_insecure > 0 && $fsz > 1 )); then
		D=$(cd "$(dirname "$0")" ; pwd -P)
		einfo "npm-secaudit found ${n_insecure} insecure apps.  Please update immediately with \`emerge @${INSECURE_SET_FN}\`."
		einfo "For full report, run with \`${D}/$(basename $BASH_SOURCE) -v\`."
	else
		einfo "No insecure npm/electron apps found."
	fi
}

function main() {
	init
	check
	summary
}

main
