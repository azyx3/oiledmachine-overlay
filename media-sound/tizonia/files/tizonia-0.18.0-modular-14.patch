--- a/plugins/configure.ac.orig	2019-03-13 16:05:10.000000000 -0700
+++ b/plugins/configure.ac	2019-08-01 20:55:07.179545167 -0700
@@ -43,10 +43,113 @@ PKG_CHECK_MODULES([CHECK], [check >= 0.9
 
 # Checks for library functions.
 
-AC_ARG_WITH(libspotify,
+AC_ARG_WITH(chromecast,
+    AS_HELP_STRING([--with-chromecast],
+        [build Chromecast support (default: yes)]),,
+    with_chromecast=yes)
+AM_CONDITIONAL(WITH_CHROMECAST, test "x$with_chromecast" = xyes)
+
+AC_ARG_WITH(file-io,
+    AS_HELP_STRING([--with-file-io],
+        [build YouTube support (default: yes)]),,
+    with_file_io=yes)
+AM_CONDITIONAL(WITH_FILE_IO, test "x$with_file_io" = xyes)
+
+AC_ARG_WITH(flac,
+    AS_HELP_STRING([--with-flac],
+        [build FLAC support (default: yes)]),,
+    with_flac=yes)
+AM_CONDITIONAL(WITH_FLAC, test "x$with_flac" = xyes)
+
+AC_ARG_WITH(icecast-server,
+    AS_HELP_STRING([--with-icecast-server],
+        [build Icecast/SHOUTcast server support (default: yes)]),,
+    with_icecast_server=yes)
+AM_CONDITIONAL(WITH_ICECAST_SERVER, test "x$with_icecast_server" = xyes)
+
+AC_ARG_WITH(http-source,
+    AS_HELP_STRING([--with-http-source],
+        [build HTTP source support (default: yes)]),,
+    with_http_source=yes)
+AM_CONDITIONAL(WITH_HTTP_SOURCE, test "x$with_http_source" = xyes)
+
+AC_ARG_WITH(mad,
+    AS_HELP_STRING([--with-mad],
+        [build MAD MP3 decoder plugin (default: yes)]),,
+    with_mad=yes)
+AM_CONDITIONAL(WITH_MAD, test "x$with_mad" = xyes)
+
+AC_ARG_WITH(lame,
+    AS_HELP_STRING([--with-lame],
+        [build LAME MP3 encoder plugin (default: yes)]),,
+    with_lame=yes)
+AM_CONDITIONAL(WITH_LAME, test "x$with_lame" = xyes)
+
+AC_ARG_WITH(libsndfile,
+    AS_HELP_STRING([--with-libsndfile],
+        [build libsndfile plugin for WAV, AIFF, AU, etc (default: yes)]),,
+    with_libsndfile=yes)
+AM_CONDITIONAL(WITH_LIBSNDFILE, test "x$with_libsndfile" = xyes)
+
+AC_ARG_WITH(mp3-metadata-eraser,
+    AS_HELP_STRING([--with-mp3-metadata-eraser],
+        [build erase MP3 metadata before streamed plugin (default: yes)]),,
+    with_mp3_metadata_eraser=yes)
+AM_CONDITIONAL(WITH_MP3_METADATA_ERASER, test "x$with_mp3_metadata_eraser" = xyes)
+
+AC_ARG_WITH(mp2,
+    AS_HELP_STRING([--with-mp2],
+        [build the MP2 plugin (default: yes)]),,
+    with_mp2=yes)
+AM_CONDITIONAL(WITH_MP2, test "x$with_mp2" = xyes)
+
+AC_ARG_WITH(ogg,
+    AS_HELP_STRING([--with-ogg],
+        [build the OGG plugins (default: yes)]),,
+    with_opus=yes)
+AM_CONDITIONAL(WITH_OGG, test "x$with_ogg" = xyes)
+
+AC_ARG_WITH(opus,
+    AS_HELP_STRING([--with-opus],
+        [build the OPUS plugins (default: yes)]),,
+    with_opus=yes)
+AM_CONDITIONAL(WITH_OPUS, test "x$with_opus" = xyes)
+
+AC_ARG_WITH(pulseaudio,
+    AS_HELP_STRING([--with-pulseaudio],
+        [build the PulseAudio plugin (default: yes)]),,
+    with_pulseaudio=yes)
+AM_CONDITIONAL(WITH_PULSEAUDIO, test "x$with_pulseaudio" = xyes)
+
+AC_ARG_WITH(vorbis,
+    AS_HELP_STRING([--with-vorbis],
+        [build the Vorbis plugin (default: yes)]),,
+    with_vorbis=yes)
+AM_CONDITIONAL(WITH_VORBIS, test "x$with_vorbis" = xyes)
+
+
+AC_ARG_WITH(vp8,
+    AS_HELP_STRING([--with-vp8],
+        [build the VP8 plugin (default: yes)]),,
+    with_vp8=yes)
+AM_CONDITIONAL(WITH_VP8, test "x$with_vp8" = xyes)
+
+AC_ARG_WITH(webm,
+    AS_HELP_STRING([--with-webm],
+        [build the WebM plugin (default: yes)]),,
+    with_webm=yes)
+AM_CONDITIONAL(WITH_WEBM, test "x$with_webm" = xyes)
+
+AC_ARG_WITH(sdl,
+    AS_HELP_STRING([--with-sdl],
+        [build the SDL image/video plugin (default: yes)]),,
+    with_sdl=yes)
+AM_CONDITIONAL(WITH_SDL, test "x$with_sdl" = xyes)
+
+AC_ARG_WITH(spotify,
     AS_HELP_STRING([--with-libspotify],
         [build the libspotify-based OpenMAX IL plugin (default: yes)]),,
-    with_libspotify=yes)
+    with_spotify=yes)
 
 AM_CONDITIONAL(WITH_LIBSPOTIFY, test "x$with_libspotify" = xyes)
 
@@ -66,28 +169,118 @@ AM_CONDITIONAL(WITH_AAC, test "x$with_aa
 
 AC_CONFIG_FILES([Makefile])
 
-AC_CONFIG_SUBDIRS([chromecast_renderer
-                   file_reader
-                   file_writer
-                   flac_decoder
-                   http_renderer
-                   http_source
-                   mp3_decoder
-                   mp3_encoder
-                   mp3_metadata
-                   mpeg_audio_decoder
-                   ogg_demuxer
-                   ogg_muxer
-                   opus_decoder
-                   opusfile_decoder
-                   pcm_decoder
-                   pcm_renderer_pa
-                   vorbis_decoder
-                   vp8_decoder
-                   webm_demuxer
-                   yuv_renderer])
+if test "$with_chromecast" = yes; then
+   if test -d "$srcdir/chromecast_renderer"; then
+      AC_CONFIG_SUBDIRS([chromecast_renderer])
+   fi
+fi
+
+if test "$with_file_io" = yes; then
+   if test -d "$srcdir/file_reader"; then
+      AC_CONFIG_SUBDIRS([file_reader])
+   fi
+   if test -d "$srcdir/file_writer"; then
+      AC_CONFIG_SUBDIRS([file_writer])
+   fi
+fi
+
+if test "$with_flac" = yes; then
+   if test -d "$srcdir/flac_decoder"; then
+      AC_CONFIG_SUBDIRS([flac_decoder])
+   fi
+fi
+
+if test "$with_icecast_server" = yes; then
+   if test -d "$srcdir/http_renderer"; then
+      AC_CONFIG_SUBDIRS([http_renderer])
+   fi
+fi
+
+if test "$with_http_source" = yes; then
+   if test -d "$srcdir/http_source"; then
+      AC_CONFIG_SUBDIRS([http_source])
+   fi
+fi
+
+if test "$with_mad" = yes; then
+   if test -d "$srcdir/mp3_decoder"; then
+      AC_CONFIG_SUBDIRS([mp3_decoder])
+   fi
+fi
+
+if test "$with_lame" = yes; then
+   if test -d "$srcdir/mp3_encoder"; then
+      AC_CONFIG_SUBDIRS([mp3_encoder])
+   fi
+fi
+
+if test "$with_mp3_metadata_eraser" = yes; then
+   if test -d "$srcdir/mp3_metadata"; then
+      AC_CONFIG_SUBDIRS([mp3_metadata])
+   fi
+fi
+
+if test "$with_mp2" = yes; then
+   if test -d "$srcdir/mpeg_audio_decoder"; then
+      AC_CONFIG_SUBDIRS([mpeg_audio_decoder])
+   fi
+fi
+
+if test "$with_ogg" = yes; then
+   if test -d "$srcdir/ogg_demuxer"; then
+      AC_CONFIG_SUBDIRS([ogg_demuxer])
+   fi
+   if test -d "$srcdir/ogg_muxer"; then
+      AC_CONFIG_SUBDIRS([ogg_muxer])
+   fi
+fi
+
+if test "$with_opus" = yes; then
+   if test -d "$srcdir/opus_decoder"; then
+      AC_CONFIG_SUBDIRS([opus_decoder])
+   fi
+   if test -d "$srcdir/opusfile_decoder"; then
+      AC_CONFIG_SUBDIRS([opusfile_decoder])
+   fi
+fi
+
+if test "$with_libsndfile" = yes; then
+   if test -d "$srcdir/pcm_decoder"; then
+      AC_CONFIG_SUBDIRS([pcm_decoder])
+   fi
+fi
+
+if test "$with_pulseaudio" = yes; then
+   if test -d "$srcdir/pcm_renderer_pa"; then
+      AC_CONFIG_SUBDIRS([pcm_renderer_pa])
+   fi
+fi
+
+if test "$with_vorbis" = yes; then
+   if test -d "$srcdir/vorbis_decoder"; then
+      AC_CONFIG_SUBDIRS([vorbis_decoder])
+   fi
+fi
+
+if test "$with_vp8" = yes; then
+   if test -d "$srcdir/vp8_decoder"; then
+      AC_CONFIG_SUBDIRS([vp8_decoder])
+   fi
+fi
+
+if test "$with_webm" = yes; then
+   if test -d "$srcdir/webm_demuxer"; then
+      AC_CONFIG_SUBDIRS([webm_demuxer])
+   fi
+fi
+
+if test "$with_sdl" = yes; then
+   if test -d "$srcdir/yuv_renderer"; then
+      AC_CONFIG_SUBDIRS([yuv_renderer])
+   fi
+fi
 
-if test "$with_libspotify" = yes; then
+if test "$with_spotify" = yes; then
    if test -d "$srcdir/spotify_source"; then
       AC_CONFIG_SUBDIRS([spotify_source])
    fi
