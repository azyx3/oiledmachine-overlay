--- a/configure.ac.orig	2019-03-13 16:05:10.000000000 -0700
+++ b/configure.ac	2019-08-01 19:22:10.115362808 -0700
@@ -58,28 +58,183 @@ AC_ARG_ENABLE(player,
     enable_player=yes)
 AM_CONDITIONAL(ENABLE_PLAYER, test "x$enable_player" = xyes)
 
-AC_ARG_WITH(libspotify,
-    AS_HELP_STRING([--with-libspotify],
-        [build the libspotify-based OpenMAX IL plugin (default: yes)]),,
-    with_libspotify=yes)
+AC_ARG_WITH(curl,
+    AS_HELP_STRING([--with-curl],
+        [build with cURL support (default: yes)]),,
+    with_curl=yes)
+AM_CONDITIONAL(WITH_CURL, test "x$with_curl" = xyes)
+
+AC_ARG_WITH(dbus,
+    AS_HELP_STRING([--with-dbus],
+        [build with D-Bus support (default: yes)]),,
+    with_dbus=yes)
+AM_CONDITIONAL(WITH_DBUS, test "x$with_dbus" = xyes)
 
 AC_ARG_WITH(alsa,
     AS_HELP_STRING([--with-alsa],
-        [build the ALSA-based OpenMAX IL plugin (default: yes)]),,
+        [build the ALSA plugin (default: yes)]),,
     with_alsa=yes)
 
 AC_ARG_WITH(aac,
     AS_HELP_STRING([--with-aac],
-        [build the AAC-based OpenMAX IL plugin (default: yes)]),,
+        [build the AAC plugin (default: yes)]),,
     with_aac=yes)
 
+AC_ARG_WITH(chromecast,
+    AS_HELP_STRING([--with-chromecast],
+        [build Chromecast support (default: yes)]),,
+    with_chromecast=yes)
+AM_CONDITIONAL(WITH_CHROMECAST, test "x$with_chromecast" = xyes)
+
+AC_ARG_WITH(dirble,
+    AS_HELP_STRING([--with-dirble],
+        [build Dirble support (default: yes)]),,
+    with_dirble=yes)
+AM_CONDITIONAL(WITH_DIRBLE, test "x$with_dirble" = xyes)
+
+AC_ARG_WITH(gmusic,
+    AS_HELP_STRING([--with-gmusic],
+        [build Google Music support (default: yes)]),,
+    with_gmusic=yes)
+AM_CONDITIONAL(WITH_GMUSIC, test "x$with_gmusic" = xyes)
+
+AC_ARG_WITH(plex,
+    AS_HELP_STRING([--with-plex],
+        [build Plex support (default: yes)]),,
+    with_plex=yes)
+AM_CONDITIONAL(WITH_PLEX, test "x$with_plex" = xyes)
+
+AC_ARG_WITH(soundcloud,
+    AS_HELP_STRING([--with-soundcloud],
+        [build SoundCloud support (default: yes)]),,
+    with_soundcloud=yes)
+AM_CONDITIONAL(WITH_SOUNDCLOUD, test "x$with_soundcloud" = xyes)
+
+AC_ARG_WITH(spotify,
+    AS_HELP_STRING([--with-spotify],
+        [build Spotify support (default: yes)]),,
+    with_spotify=yes)
+AM_CONDITIONAL(WITH_SPOTIFY, test "x$with_spotify" = xyes)
+
+AC_ARG_WITH(youtube,
+    AS_HELP_STRING([--with-youtube],
+        [build YouTube support (default: yes)]),,
+    with_youtube=yes)
+AM_CONDITIONAL(WITH_YOUTUBE, test "x$with_youtube" = xyes)
+
+AC_ARG_WITH(file-io,
+    AS_HELP_STRING([--with-file-io],
+        [build YouTube support (default: yes)]),,
+    with_file_io=yes)
+
+AC_ARG_WITH(flac,
+    AS_HELP_STRING([--with-flac],
+        [build FLAC support (default: yes)]),,
+    with_flac=yes)
+
+AC_ARG_WITH(icecast-client,
+    AS_HELP_STRING([--with-icecast-client],
+        [build Icecast/SHOUTcast client support (default: yes)]),,
+    with_icecast_client=yes)
+
+AC_ARG_WITH(icecast-server,
+    AS_HELP_STRING([--with-icecast-server],
+        [build Icecast/SHOUTcast server support (default: yes)]),,
+    with_icecast_server=yes)
+
+AC_ARG_WITH(http-source,
+    AS_HELP_STRING([--with-http-source],
+        [build HTTP source support (default: yes)]),,
+    with_http_source=yes)
+
+AC_ARG_WITH(inproc-io,
+    AS_HELP_STRING([--with-inproc-io],
+        [build inproc io plugins (default: yes)]),,
+    with_inproc_io=yes)
+
+AC_ARG_WITH(lame,
+    AS_HELP_STRING([--with-lame],
+        [build LAME MP3 encoder plugin (default: yes)]),,
+    with_lame=yes)
+
+AC_ARG_WITH(libsndfile,
+    AS_HELP_STRING([--with-libsndfile],
+        [build libsndfile plugin for WAV, AIFF, AU, etc (default: yes)]),,
+    with_libsndfile=yes)
+
+AC_ARG_WITH(mad,
+    AS_HELP_STRING([--with-mad],
+        [build MAD MP3 decoder plugin (default: yes)]),,
+    with_mad=yes)
+
+AC_ARG_WITH(mp3-metadata-eraser,
+    AS_HELP_STRING([--with-mp3-metadata-eraser],
+        [build erase MP3 metadata before streamed plugin (default: yes)]),,
+    with_mp3_metadata_eraser=yes)
+
+AC_ARG_WITH(mp4,
+    AS_HELP_STRING([--with-mp4],
+        [build the MP4 plugin (default: yes)]),,
+    with_mp4=yes)
+
+AC_ARG_WITH(mp2,
+    AS_HELP_STRING([--with-mp2],
+        [build the MP2 plugin (default: yes)]),,
+    with_mp2=yes)
+
+AC_ARG_WITH(ogg,
+    AS_HELP_STRING([--with-ogg],
+        [build the OGG plugins (default: yes)]),,
+    with_ogg=yes)
+
+AC_ARG_WITH(opus,
+    AS_HELP_STRING([--with-opus],
+        [build the OPUS plugins (default: yes)]),,
+    with_opus=yes)
+
+AC_ARG_WITH(pulseaudio,
+    AS_HELP_STRING([--with-pulseaudio],
+        [build the PulseAudio plugin (default: yes)]),,
+    with_pulseaudio=yes)
+
+AC_ARG_WITH(sdl,
+    AS_HELP_STRING([--with-sdl],
+        [build the SDL image/video plugin (default: yes)]),,
+    with_sdl=yes)
+
+AC_ARG_WITH(vorbis,
+    AS_HELP_STRING([--with-vorbis],
+        [build the Vorbis plugin (default: yes)]),,
+    with_vorbis=yes)
+
+AC_ARG_WITH(vp8,
+    AS_HELP_STRING([--with-vp8],
+        [build the VP8 plugin (default: yes)]),,
+    with_vp8=yes)
+
+AC_ARG_WITH(webm,
+    AS_HELP_STRING([--with-webm],
+        [build the WebM plugin (default: yes)]),,
+    with_webm=yes)
+
+if test -z "$with_http_source" ; then
+    if test "$with_icecast_client" = yes || test "$with_dirble" = yes || test "$with_gmusic" = yes || test "$with_plex" = yes || test "$with_soundcloud" = yes || test "$with_youtube" = yes ; then
+        AC_MSG_ERROR([icecast-client, dirble, gmusic, plex, soundcloud, youtube requires --with-http-source.])
+    fi
+fi
+
 AC_CONFIG_FILES([Makefile])
+
 AC_CONFIG_SUBDIRS([3rdparty
                    include
                    clients
-                   libtizplatform
-                   cast
-                   rm
+                   libtizplatform])
+
+if test "$with_chromecast" = yes; then
+	AC_CONFIG_SUBDIRS([cast])
+fi
+
+AC_CONFIG_SUBDIRS([rm
                    libtizcore
                    libtizonia
                    plugins
@@ -105,11 +254,49 @@ AC_MSG_RESULT([
   General configuration:
 
     Tizonia player: .............. ${enable_player}
-    libspotify plugin: ........... ${with_libspotify}
-    ALSA plugin: ................. ${with_alsa}
+
     Blocking ETB/FTB: ............ ${blocking_etb_ftb}
     Blocking OMX_SendCommand: .... ${blocking_sendcommand}
 
+    cURL: ........................ ${with_curl}
+    D-Bus: ....................... ${with_dbus}
+
+  Services
+
+    Chromecast: .................. ${with_chromecast}
+    Dirble: ...................... ${with_dirble}
+    Google Music: ................ ${with_gmusic}
+    Icecast/SHOUTcast client ..... ${with_icecast_client}
+    Plex: ........................ ${with_plex}
+    SoundCloud: .................. ${with_soundcloud}
+    Spotify: ..................... ${with_spotify}
+    YouTube: ..................... ${with_youtube}
+
+  Plugins:
+
+    ALSA: ........................ ${with_alsa}
+    AAC: ......................... ${with_aac}
+    Chromecast: .................. ${with_chromecast}
+    File I/O: .................... ${with_file_io}
+    FLAC: ........................ ${with_flac}
+    Icecast server: .............. ${with_icecast_server}
+    http_source: ................. ${with_http_source}
+    ZMQ in-process I/O: .......... ${with_inproc_io}
+    LAME (MP3 record): ........... ${with_lame}
+    libsndfile (WAV AIFF): ....... ${with_libsndfile}
+    MAD (MP3 playback): .......... ${with_mad}
+    MP3 metadata eraser: ......... ${with_mp3_metadata_eraser}
+    MP4: ......................... ${with_mp4}
+    MP2: ......................... ${with_mp2}
+    OGG: ......................... ${with_ogg}
+    OPUS: ........................ ${with_opus}
+    PulseAudio: .................. ${with_pulseaudio}
+    SDL image/video: ............. ${with_sdl}
+    Spotify: ..................... ${with_spotify}
+    Vorbis: ...................... ${with_vorbis}
+    VP8: ......................... ${with_vp8}
+    WebM: ........................ ${with_webm}
+
   Installation paths:
 
     libraries: ................... ${LIBDIR}
