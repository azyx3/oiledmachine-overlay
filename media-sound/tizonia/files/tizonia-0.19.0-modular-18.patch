--- a/player/src/tizprogramopts.cpp	2019-12-13 13:53:55.000000000 -0800
+++ b/player/src/tizprogramopts.cpp	2020-01-15 22:54:17.877404785 -0800
@@ -538,35 +538,51 @@ void tiz::programopts::print_usage_help
   std::cout << "  "
             << "openmax       Various OpenMAX IL query options."
             << "\n";
+#ifdef HAVE_ICECAST_SERVER
   std::cout << "  "
             << "server        SHOUTcast/ICEcast streaming server options."
             << "\n";
+#endif
+#ifdef HAVE_ICECAST_CLIENT
   std::cout << "  "
             << "client        SHOUTcast/ICEcast streaming client options."
             << "\n";
+#endif
 #ifdef HAVE_LIBSPOTIFY
   std::cout << "  "
             << "spotify       Spotify options."
             << "\n";
 #endif
+#ifdef HAVE_GMUSIC
   std::cout << "  "
             << "googlemusic   Google Play Music options."
             << "\n";
+#endif
+#ifdef HAVE_SOUNDCLOUD
   std::cout << "  "
             << "soundcloud    SoundCloud options."
             << "\n";
+#endif
+#ifdef HAVE_DIRBLE
 //   std::cout << "  "
 //             << "dirble        Dirble options."
 //             << "\n";
+#endif
+#ifdef HAVE_YOUTUBE
   std::cout << "  "
             << "youtube       YouTube options."
             << "\n";
+#endif
+#ifdef HAVE_PLEX
   std::cout << "  "
             << "plex          Plex options."
             << "\n";
+#endif
+#ifdef HAVE_CHROMECAST
   std::cout << "  "
             << "chromecast    Chromecast options."
             << "\n";
+#endif
   std::cout << "  "
             << "proxy         Proxy server options."
             << "\n";
@@ -1516,6 +1532,7 @@ void tiz::programopts::init_omx_options
 
 void tiz::programopts::init_streaming_server_options ()
 {
+#ifdef HAVE_ICECAST_SERVER
   server_.add_options ()
       /* TIZ_CLASS_COMMENT: This is to avoid the clang formatter messing up
          these lines*/
@@ -1559,10 +1576,12 @@ void tiz::programopts::init_streaming_se
             "station-genre") ("no-icy-metadata") ("bitrate-modes") (
             "sampling-rates")
             .convert_to_container< std::vector< std::string > > ();
+#endif
 }
 
 void tiz::programopts::init_streaming_client_options ()
 {
+#ifdef HAVE_ICECAST_CLIENT
   client_.add_options ()
       /* TIZ_CLASS_COMMENT: */
       ("station-id", po::value (&station_name_),
@@ -1572,6 +1591,7 @@ void tiz::programopts::init_streaming_cl
   all_streaming_client_options_
       = boost::assign::list_of ("station-id")
             .convert_to_container< std::vector< std::string > > ();
+#endif
 }
 
 void tiz::programopts::init_spotify_options ()
@@ -1669,6 +1689,7 @@ void tiz::programopts::init_spotify_opti
 
 void tiz::programopts::init_gmusic_options ()
 {
+#ifdef HAVE_GMUSIC
   gmusic_.add_options ()
       /* TIZ_CLASS_COMMENT: */
       ("gmusic-user", po::value (&gmusic_user_),
@@ -1753,10 +1774,12 @@ void tiz::programopts::init_gmusic_optio
             "gmusic-unlimited-feeling-lucky-station") (
             "gmusic-unlimited-promoted-tracks")
             .convert_to_container< std::vector< std::string > > ();
+#endif
 }
 
 void tiz::programopts::init_scloud_options ()
 {
+#ifdef HAVE_SOUNDCLOUD
   scloud_.add_options ()
       /* TIZ_CLASS_COMMENT: */
       ("soundcloud-oauth-token", po::value (&scloud_oauth_token_),
@@ -1793,10 +1816,12 @@ void tiz::programopts::init_scloud_optio
             "soundcloud-tracks") ("soundcloud-playlists") (
             "soundcloud-genres") ("soundcloud-tags")
             .convert_to_container< std::vector< std::string > > ();
+#endif
 }
 
 // void tiz::programopts::init_dirble_options ()
 // {
+#ifdef HAVE_DIRBLE
 //   dirble_.add_options ()
 //       /* TIZ_CLASS_COMMENT: */
 //       ("dirble-api-key", po::value (&dirble_api_key_),
@@ -1816,10 +1841,12 @@ void tiz::programopts::init_scloud_optio
 //       = boost::assign::list_of ("dirble-api-key") ("dirble-popular-stations") (
 //             "dirble-station") ("dirble-category") ("dirble-country")
 //             .convert_to_container< std::vector< std::string > > ();
+#endif
 // }
 
 void tiz::programopts::init_youtube_options ()
 {
+#ifdef HAVE_YOUTUBE
   youtube_.add_options ()
       /* TIZ_CLASS_COMMENT: */
       ("youtube-audio-stream", po::value (&youtube_audio_stream_),
@@ -1850,10 +1877,12 @@ void tiz::programopts::init_youtube_opti
             "youtube-audio-search") ("youtube-audio-mix-search") (
             "youtube-audio-channel-uploads") ("youtube-audio-channel-playlist")
             .convert_to_container< std::vector< std::string > > ();
+#endif
 }
 
 void tiz::programopts::init_plex_options ()
 {
+#ifdef HAVE_PLEX
   plex_.add_options ()
       /* TIZ_CLASS_COMMENT: */
       ("plex-server-base-url", po::value (&plex_base_url_),
@@ -1886,6 +1915,7 @@ void tiz::programopts::init_plex_options
             "plex-music-section") ("plex-audio-tracks") ("plex-audio-artist") (
             "plex-audio-album") ("plex-audio-playlist")
             .convert_to_container< std::vector< std::string > > ();
+#endif
 }
 
 void tiz::programopts::init_input_uri_option ()
@@ -1910,16 +1940,30 @@ uint32_t tiz::programopts::parse_command
   all.add (global_)
       .add (debug_)
       .add (omx_)
+#ifdef HAVE_ICECAST_SERVER
       .add (server_)
+#endif
+#ifdef HAVE_ICECAST_CLIENT
       .add (client_)
+#endif
 #ifdef HAVE_LIBSPOTIFY
       .add (spotify_)
 #endif
+#ifdef HAVE_GMUSIC
       .add (gmusic_)
+#endif
+#ifdef HAVE_SOUNDCLOUD
       .add (scloud_)
+#endif
+#ifdef HAVE_DIRBLE
 //       .add (dirble_)
+#endif
+#ifdef HAVE_YOUTUBE
       .add (youtube_)
+#endif
+#ifdef HAVE_PLEX
       .add (plex_)
+#endif
       .add (input_);
   po::parsed_options parsed = po::command_line_parser (argc, argv)
                                   .options (all)
@@ -1983,44 +2027,60 @@ int tiz::programopts::consume_global_opt
     {
       print_usage_feature (omx_);
     }
+#ifdef HAVE_ICECAST_SERVER
     else if (0 == help_option_.compare ("server"))
     {
       print_usage_feature (server_);
     }
+#endif
+#ifdef HAVE_ICECAST_CLIENT
     else if (0 == help_option_.compare ("client"))
     {
       print_usage_feature (client_);
     }
+#endif
 #ifdef HAVE_LIBSPOTIFY
     else if (0 == help_option_.compare ("spotify"))
     {
       print_usage_feature (spotify_);
     }
 #endif
+#ifdef HAVE_GMUSIC
     else if (0 == help_option_.compare ("googlemusic"))
     {
       print_usage_feature (gmusic_);
     }
+#endif
+#ifdef HAVE_SOUNDCLOUD
     else if (0 == help_option_.compare ("soundcloud"))
     {
       print_usage_feature (scloud_);
     }
+#endif
+#ifdef HAVE_DIRBLE
 //     else if (0 == help_option_.compare ("dirble"))
 //     {
 //       print_usage_feature (dirble_);
 //     }
+#endif
+#ifdef HAVE_YOUTUBE
     else if (0 == help_option_.compare ("youtube"))
     {
       print_usage_feature (youtube_);
     }
+#endif
+#ifdef HAVE_PLEX
     else if (0 == help_option_.compare ("plex"))
     {
       print_usage_feature (plex_);
     }
+#endif
+#ifdef HAVE_CHROMECAST
     else if (0 == help_option_.compare ("chromecast"))
     {
       print_usage_feature (chromecast_);
     }
+#endif
     else if (0 == help_option_.compare ("proxy"))
     {
       print_usage_feature (proxy_);
