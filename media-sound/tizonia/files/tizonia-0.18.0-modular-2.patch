--- a/player/configure.ac.orig	2019-03-13 16:05:10.000000000 -0700
+++ b/player/configure.ac	2019-08-01 19:49:14.249767070 -0700
@@ -139,21 +139,190 @@ AC_FUNC_ERROR_AT_LINE
 AC_FUNC_FORK
 AC_CHECK_FUNCS([dup2 gethostname getpass strerror])
 
-AC_ARG_WITH(libspotify,
-    AS_HELP_STRING([--with-libspotify],
-        [build support for the libspotify-based OpenMAX IL plugin (default: yes)]),,
-    with_libspotify=yes)
+AC_ARG_WITH(aac,
+    AS_HELP_STRING([--with-aac],
+        [build with AAC support (default: yes)]),,
+    with_aac=yes)
+AM_CONDITIONAL(WITH_AAC, test "x$with_aac" = xyes)
+
+if test "$with_aac" = yes; then
+      AC_DEFINE(HAVE_AAC, 1, [Support for AAC is included])
+fi
 
-AM_CONDITIONAL(WITH_LIBSPOTIFY, test "x$with_libspotify" = xyes)
+AC_ARG_WITH(chromecast,
+    AS_HELP_STRING([--with-chromecast],
+        [build support for the Chromecast plugin (default: yes)]),,
+    with_chromecast=yes)
+AM_CONDITIONAL(WITH_CHROMECAST, test "x$with_chromecast" = xyes)
+
+if test "$with_chromecast" = yes; then
+      AC_DEFINE(HAVE_CHROMECAST, 1, [Support for Chromecast is included])
+fi
+
+AC_ARG_WITH(dbus,
+    AS_HELP_STRING([--with-dbus],
+        [build with D-Bus support (default: yes)]),,
+    with_dbus=yes)
+AM_CONDITIONAL(WITH_DBUS, test "x$with_dbus" = xyes)
+
+AC_ARG_WITH(dirble,
+    AS_HELP_STRING([--with-dirble],
+        [build support for the Dirble plugin (default: yes)]),,
+    with_dirble=yes)
+AM_CONDITIONAL(WITH_DIRBLE, test "x$with_dirble" = xyes)
+
+AC_ARG_WITH(flac,
+    AS_HELP_STRING([--with-flac],
+        [build support for the FLAC plugin (default: yes)]),,
+    with_flac=yes)
+AM_CONDITIONAL(WITH_FLAC, test "x$with_flac" = xyes)
+
+if test "$with_flac" = yes; then
+      AC_DEFINE(HAVE_FLAC, 1, [Support for FLAC is included])
+fi
+
+AC_ARG_WITH(gmusic,
+    AS_HELP_STRING([--with-gmusic],
+        [build support for the Google Music plugin (default: yes)]),,
+    with_gmusic=yes)
+AM_CONDITIONAL(WITH_GMUSIC, test "x$with_gmusic" = xyes)
+
+if test "$with_gmusic" = yes; then
+      AC_DEFINE(HAVE_GMUSIC, 1, [Support for Google Music is included])
+fi
+
+AC_ARG_WITH(icecast-server,
+    AS_HELP_STRING([--with-icecast-server],
+        [build with Icecast/SHOUTcast server support (default: yes)]),,
+    with_icecast_server=yes)
+AM_CONDITIONAL(WITH_ICECAST_SERVER, test "x$with_icecast_server" = xyes)
+
+if test "$with_icecast_server" = yes; then
+      AC_DEFINE(HAVE_ICECAST_SERVER, 1, [Support for Icecast server is included])
+fi
+
+AC_ARG_WITH(icecast-client,
+    AS_HELP_STRING([--with-icecast-client],
+        [build with Icecast/SHOUTcast client support (default: yes)]),,
+    with_icecast_client=yes)
+AM_CONDITIONAL(WITH_ICECAST_CLIENT, test "x$with_icecast_client" = xyes)
+
+if test "$with_icecast_client" = yes; then
+      AC_DEFINE(HAVE_ICECAST_CLIENT, 1, [Support for Icecast client is included])
+fi
+
+AC_ARG_WITH(mp3,
+    AS_HELP_STRING([--with-mp3],
+        [build with MP3 support (default: yes)]),,
+    with_mp3=yes)
+AM_CONDITIONAL(WITH_MP3, test "x$with_mp3" = xyes)
+
+if test "$with_mp3" = yes; then
+      AC_DEFINE(HAVE_MP3, 1, [Support for MP3 is included])
+fi
+
+AC_ARG_WITH(mp2,
+    AS_HELP_STRING([--with-mp2],
+        [build with MP2 support (default: yes)]),,
+    with_mp2=yes)
+AM_CONDITIONAL(WITH_MP2, test "x$with_mp2" = xyes)
+
+if test "$with_mp2" = yes; then
+      AC_DEFINE(HAVE_MP2, 1, [Support for MP2 is included])
+fi
+
+AC_ARG_WITH(plex,
+    AS_HELP_STRING([--with-plex],
+        [build support for the Plex plugin (default: yes)]),,
+    with_plex=yes)
+AM_CONDITIONAL(WITH_PLEX, test "x$with_plex" = xyes)
+
+if test "$with_plex" = yes; then
+      AC_DEFINE(HAVE_PLEX, 1, [Support for Plex is included])
+fi
+
+AC_ARG_WITH(soundcloud,
+    AS_HELP_STRING([--with-soundcloud],
+        [build support for the SoundCloud plugin (default: yes)]),,
+    with_soundcloud=yes)
+AM_CONDITIONAL(WITH_SOUNDCLOUD, test "x$with_soundcloud" = xyes)
+
+if test "$with_soundcloud" = yes; then
+      AC_DEFINE(HAVE_SOUNDCLOUD, 1, [Support for SoundCloud is included])
+fi
+
+AC_ARG_WITH(spotify,
+    AS_HELP_STRING([--with-spotify],
+        [build support for the Spotify plugin (default: yes)]),,
+    with_spotify=yes)
+AM_CONDITIONAL(WITH_SPOTIFY, test "x$with_spotify" = xyes)
+
+AC_ARG_WITH(ogg,
+    AS_HELP_STRING([--with-ogg],
+        [build support for the OGG plugin (default: yes)]),,
+    with_ogg=yes)
+AM_CONDITIONAL(WITH_OGG, test "x$with_ogg" = xyes)
+
+if test "$with_ogg" = yes; then
+      AC_DEFINE(HAVE_OGG, 1, [Support for OGG is included])
+fi
+
+AC_ARG_WITH(opus,
+    AS_HELP_STRING([--with-opus],
+        [build support for the Opus plugin (default: yes)]),,
+    with_opus=yes)
+AM_CONDITIONAL(WITH_OPUS, test "x$with_opus" = xyes)
+
+if test "$with_opus" = yes; then
+      AC_DEFINE(HAVE_OPUS, 1, [Support for OPUS is included])
+fi
+
+AC_ARG_WITH(vorbis,
+    AS_HELP_STRING([--with-vorbis],
+        [build support for the Vorbis plugin (default: yes)]),,
+    with_vorbis=yes)
+AM_CONDITIONAL(WITH_VORBIS, test "x$with_vorbis" = xyes)
+
+if test "$with_vorbis" = yes; then
+      AC_DEFINE(HAVE_VORBIS, 1, [Support for Vorbis is included])
+fi
+
+AC_ARG_WITH(youtube,
+    AS_HELP_STRING([--with-youtube],
+        [build support for the YouTube plugin (default: yes)]),,
+    with_youtube=yes)
+AM_CONDITIONAL(WITH_YOUTUBE, test "x$with_youtube" = xyes)
+
+if test "$with_youtube" = yes; then
+      AC_DEFINE(HAVE_YOUTUBE, 1, [Support for YouTube is included])
+fi
+
+AC_ARG_WITH(libsndfile,
+    AS_HELP_STRING([--with-libsndfile],
+        [build libsndfile plugin for WAV, AIFF, AU, etc (default: yes)]),,
+    with_libsndfile=yes)
+AM_CONDITIONAL(WITH_LIBSNDFILE, test "x$with_libsndfile" = xyes)
+
+if test "$with_libsndfile" = yes; then
+      AC_DEFINE(HAVE_LIBSNDFILE, 1, [Support for libsndfile is included])
+fi
 
 AC_CONFIG_FILES([Makefile
-                tools/Makefile
-                dbus/Makefile
-                src/Makefile])
+                tools/Makefile])
+
+if test "$with_dbus" = yes; then
+	AC_CONFIG_FILES([dbus/Makefile])
+fi
+
+AC_CONFIG_FILES([src/Makefile])
 
-if test "$with_libspotify" = yes; then
+if test "$with_spotify" = yes; then
       AC_DEFINE(HAVE_LIBSPOTIFY, 1, [Support for libspotify is included])
 fi
 
+if test "$with_dbus" = yes; then
+      AC_DEFINE(HAVE_DBUS, 1, [Support for dbus is included])
+fi
+
 # End the configure script.
 AC_OUTPUT
