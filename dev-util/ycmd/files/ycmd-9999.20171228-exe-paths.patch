diff -urp ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/cs/cs_completer.py ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/cs/cs_completer.py
--- ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/cs/cs_completer.py	2017-12-28 20:40:01.000000000 -0800
+++ ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/cs/cs_completer.py	2018-01-01 20:08:56.008542325 -0800
@@ -45,10 +45,7 @@ SERVER_NOT_FOUND_MSG = ( 'OmniSharp serv
                          '"./install.py --cs-completer".' )
 INVALID_FILE_MESSAGE = 'File is invalid.'
 NO_DIAGNOSTIC_MESSAGE = 'No diagnostic for current line!'
-PATH_TO_OMNISHARP_BINARY = os.path.abspath(
-  os.path.join( os.path.dirname( __file__ ), '..', '..', '..',
-                'third_party', 'OmniSharpServer', 'OmniSharp',
-                'bin', 'Release', 'OmniSharp.exe' ) )
+PATH_TO_OMNISHARP_BINARY = "GENTOO_OMNISHARP"
 LOGFILE_FORMAT = 'omnisharp_{port}_{sln}_{std}_'
 
 
Only in ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/cs: cs_completer.py.orig
diff -urp ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/go/go_completer.py ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/go/go_completer.py
--- ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/go/go_completer.py	2017-12-28 20:40:01.000000000 -0800
+++ ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/go/go_completer.py	2018-01-01 20:08:56.009542325 -0800
@@ -48,15 +48,9 @@ GOCODE_NO_COMPLETIONS_MESSAGE = 'No comp
 GOCODE_PANIC_MESSAGE = ( 'Gocode panicked trying to find completions, '
                          'you likely have a syntax error.' )
 
-DIR_OF_THIRD_PARTY = os.path.abspath(
-  os.path.join( os.path.dirname( __file__ ), '..', '..', '..', 'third_party' ) )
 GO_BINARIES = dict( {
-  'gocode': os.path.join( DIR_OF_THIRD_PARTY,
-                          'gocode',
-                          ExecutableName( 'gocode' ) ),
-  'godef': os.path.join( DIR_OF_THIRD_PARTY,
-                         'godef',
-                         ExecutableName( 'godef' ) )
+  'gocode': "/usr/bin/gocode",
+  'godef': "/usr/bin/godef"
 } )
 
 LOGFILE_FORMAT = 'gocode_{port}_{std}_'
Only in ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/go: go_completer.py.orig
diff -urp ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/javascript/tern_completer.py ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/javascript/tern_completer.py
--- ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/javascript/tern_completer.py	2017-12-28 20:40:01.000000000 -0800
+++ ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/javascript/tern_completer.py	2018-01-01 20:08:56.009542325 -0800
@@ -35,18 +35,7 @@ from ycmd.completers.completer_utils imp
 
 _logger = logging.getLogger( __name__ )
 
-PATH_TO_TERN_BINARY = os.path.abspath(
-  os.path.join(
-    os.path.dirname( __file__ ),
-    '..',
-    '..',
-    '..',
-    'third_party',
-    'tern_runtime',
-    'node_modules',
-    'tern',
-    'bin',
-    'tern' ) )
+PATH_TO_TERN_BINARY = "/usr/lib64/node/tern/0.20.0/bin/tern"
 
 # On Debian-based distributions, node is by default installed as nodejs.
 PATH_TO_NODE = utils.PathToFirstExistingExecutable( [ 'nodejs', 'node' ] )
Only in ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/javascript: tern_completer.py.orig
diff -urp ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/python/jedi_completer.py ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/python/jedi_completer.py
--- ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/python/jedi_completer.py	2017-12-28 20:40:01.000000000 -0800
+++ ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/python/jedi_completer.py	2018-01-01 20:09:34.676541706 -0800
@@ -46,9 +46,7 @@ JEDIHTTP_IDLE_SUICIDE_SECONDS = 1800  #
 BINARY_NOT_FOUND_MESSAGE = ( 'The specified python interpreter {0} ' +
                              'was not found. Did you specify it correctly?' )
 LOGFILE_FORMAT = 'jedihttp_{port}_{std}_'
-PATH_TO_JEDIHTTP = os.path.abspath(
-  os.path.join( os.path.dirname( __file__ ), '..', '..', '..',
-                'third_party', 'JediHTTP', 'jedihttp' ) )
+PATH_TO_JEDIHTTP = "/usr/bin/jedihttp.py"
 
 
 class JediCompleter( Completer ):
Only in ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/python: jedi_completer.py.orig
Only in ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/python: jedi_completer.py.rej
diff -urp ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/rust/rust_completer.py ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/rust/rust_completer.py
--- ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466.orig/ycmd/completers/rust/rust_completer.py	2017-12-28 20:40:01.000000000 -0800
+++ ycmd-e5d696e9b58729d89df60fadebc15fc38e18c466/ycmd/completers/rust/rust_completer.py	2018-01-01 20:08:56.011542325 -0800
@@ -42,14 +42,9 @@ from os import path as p
 
 _logger = logging.getLogger( __name__ )
 
-DIR_OF_THIRD_PARTY = p.abspath(
-  p.join( p.dirname( __file__ ), '..', '..', '..', 'third_party' ) )
-
 RACERD_BINARY_NAME = 'racerd' + ( '.exe' if utils.OnWindows() else '' )
-RACERD_BINARY_RELEASE = p.join( DIR_OF_THIRD_PARTY, 'racerd', 'target',
-                        'release', RACERD_BINARY_NAME )
-RACERD_BINARY_DEBUG = p.join( DIR_OF_THIRD_PARTY, 'racerd', 'target',
-                        'debug', RACERD_BINARY_NAME )
+RACERD_BINARY_RELEASE = "/usr/bin/"+RACERD_BINARY_NAME
+RACERD_BINARY_DEBUG = "/usr/bin"+RACERD_BINARY_NAME
 
 RACERD_HMAC_HEADER = 'x-racerd-hmac'
 HMAC_SECRET_LENGTH = 16
