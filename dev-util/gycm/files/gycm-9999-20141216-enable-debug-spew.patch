diff -urp gycm-1963a9f6b51a3aff7c44780dcb13d056a8659b21.orig/ycmd.cpp gycm-1963a9f6b51a3aff7c44780dcb13d056a8659b21/ycmd.cpp
--- gycm-1963a9f6b51a3aff7c44780dcb13d056a8659b21.orig/ycmd.cpp	2017-01-15 22:50:27.477665057 -0800
+++ gycm-1963a9f6b51a3aff7c44780dcb13d056a8659b21/ycmd.cpp	2017-01-15 22:53:27.535585428 -0800
@@ -205,12 +205,12 @@ int Ycmd::handler(const char * buf, size
 	}
 	// We have a complete set of data
 	
-	//for(size_t i=0; i<returned_data.size(); i++){
-	//	printf("%c",returned_data[i]);
-	//}
-	//printf("\n\n");
+	for(size_t i=0; i<returned_data.size(); i++){
+		printf("%c",returned_data[i]);
+	}
+	printf("\n\n");
 	
-	//std::cout << "Handling response: " << returned_data;
+	std::cout << "Handling response: " << returned_data;
 	
 	Json::Value returned;
 	if(!doc.parse(returned_data,returned)){
@@ -232,15 +232,15 @@ int Ycmd::handler(const char * buf, size
 		return 0;
 	}
 	
-	//std::cout << returned.toStyledString();
+	std::cout << returned.toStyledString();
 	
 	// Handle completions
 	if(returned.isMember("completion_start_column")){
 		Json::Value * v;
 		if(returned.isMember("completions") && (v = &returned["completions"])->isArray() && v->size() >= 1){ // We need to display a list!
-			//printf("Got here!\n");
+			printf("Got here!\n");
 			int lenEntered = currentMessage["column_num"].asInt() - returned["completion_start_column"].asInt(); // Geany uses 0-index for columns
-			//printf("l: %i, len: %zi\n",lenEntered,v->size());
+			printf("l: %i, len: %zi\n",lenEntered,v->size());
 			std::string s;
 			for(size_t i=0; i<(v->size()-1); i++){
 				try {
@@ -251,7 +251,7 @@ int Ycmd::handler(const char * buf, size
 				//printf("i: %zu\n",i);
 			}
 			s += (*v)[v->size()-1]["insertion_text"].asString();
-			//printf("s: %s\n",s.c_str());
+			printf("s: %s\n",s.c_str());
 			SSM(currentEditor,SCI_AUTOCSHOW,lenEntered,(sptr_t) s.c_str());
 		} else { // Nothing completable
 			SSM(currentEditor,SCI_AUTOCCANCEL,0,0); // Cancel any current completions
