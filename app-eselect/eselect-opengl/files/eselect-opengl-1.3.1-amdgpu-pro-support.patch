--- a/opengl.eselect-1.3.1.orig	2020-04-30 20:21:51.712174821 -0700
+++ b/opengl.eselect-1.3.1	2020-04-30 20:36:07.295212666 -0700
@@ -9,6 +9,7 @@
 # Further modifications based off submissions to bug #54984 <cyfred@gentoo.org>
 # Further modifications by Jeremy Huddleston <eradicator@gentoo.org>
 # Made into eselect module by Jeremy Huddleston <eradicator@gentoo.org>
+# Added amdgpu-pro, amdgpu-pro-lts support by Orson Teodoro <orsonteodoro@hotmail.com>
 
 inherit multilib package-manager config
 
@@ -58,6 +59,9 @@ get_implementations() {
 		done
 	done
 
+	[[ -d /opt/amdgpu ]] && ret+=( "amdgpu" )
+	[[ -d /opt/amdgpu-pro ]] && ret+=( "amdgpu-pro" )
+
 	has xorg-x11 "${ret[@]}" || ret+=( xorg-x11 )
 	echo "${ret[*]}"
 }
@@ -91,6 +95,17 @@ set_new_implementation() {
 		local found_libgl
 		for libdir in $(list_libdirs); do
 			[[ ${ROOT} != / ]] && libdir=${libdir#${EROOT}}
+
+			if [[ "${gl_implem}" == "amdgpu-pro" ]] ; then
+				[[ ${libdir} == "lib64" && -f "${EROOT}/opt/amdgpu-pro/lib/x86_64-linux-gnu/libGL.so" ]] && found_libgl=yes
+				[[ ${libdir} == "lib32" && -f "${EROOT}/opt/amdgpu-pro/lib/i386-linux-gnu/libGL.so" ]] && found_libgl=yes
+				[[ ${libdir} == "lib64" && -f "${EROOT}/opt/amdgpu-pro/lib64/libGL.so" ]] && found_libgl=yes
+			elif [[ "${gl_implem}" == "amdgpu" ]] ; then
+				[[ ${libdir} == "lib64" && -f "${EROOT}/opt/amdgpu/lib/x86_64-linux-gnu/libGL.so" ]] && found_libgl=yes
+				[[ ${libdir} == "lib32" && -f "${EROOT}/opt/amdgpu/lib/i386-linux-gnu/libGL.so" ]] && found_libgl=yes
+				[[ ${libdir} == "lib64" && -f "${EROOT}/opt/amdgpu/lib64/libGL.so" ]] && found_libgl=yes
+			fi
+
 			[[ -d ${PREFIX}/${libdir}/opengl && ! -h ${PREFIX}/${libdir} ]] || continue
 			[[ -f "${PREFIX}/${libdir}/opengl/${gl_implem}/lib/libGL.so" || -f "${PREFIX}/${libdir}/opengl/${gl_implem}/.gles-only" ]] && found_libgl=yes
 		done
@@ -116,9 +131,59 @@ set_new_implementation() {
 		# Set libdir correctly to EROOT
 		[[ ${ROOT} != / ]] && libdir=${libdir#${EROOT}}
 
-		# First make sure we have an opengl directory and this
-		# is a real lib dir, not a symlink
-		[[ -d ${PREFIX}/${libdir}/opengl && ! -h ${PREFIX}/${libdir} ]] || continue
+		# For amdgpu-pro-lts (pro-stack)
+		if [[ -d "${EROOT}/opt/amdgpu-pro/lib/xorg/modules" ]] ; then
+			if [[ "${libdir}" == "lib64" ]] ; then
+				ldpath=${ldpath:+${ldpath}:}${EROOT}/opt/amdgpu-pro/lib/x86_64-linux-gnu
+			elif [[ "${libdir}" == "lib32" ]] ; then
+				ldpath=${ldpath:+${ldpath}:}${EROOT}/opt/amdgpu-pro/lib/i386-linux-gnu
+			fi
+			xorgmodpath+=(
+				"${EROOT}/opt/amdgpu-pro/lib/xorg/modules"
+			)
+		fi
+		# For amdgpu-pro-lts (open-stack)
+		if [[ -d "${EROOT}/opt/amdgpu/lib/xorg/modules" ]] ; then
+			if [[ "${libdir}" == "lib64" ]] ; then
+				ldpath=${ldpath:+${ldpath}:}${EROOT}/opt/amdgpu/lib/x86_64-linux-gnu
+			elif [[ "${libdir}" == "lib32" ]] ; then
+				ldpath=${ldpath:+${ldpath}:}${EROOT}/opt/amdgpu/lib/i386-linux-gnu
+			fi
+			xorgmodpath+=(
+				"${EROOT}/opt/amdgpu/lib/xorg/modules"
+			)
+		fi
+
+		# For amdgpu-pro (pro-stack)
+		if [[ -d "${EROOT}/opt/amdgpu-pro/lib64/xorg/modules" ]] ; then
+			if [[ "${libdir}" == "lib64" ]] ; then
+				ldpath=${ldpath:+${ldpath}:}${EROOT}/opt/amdgpu-pro/lib64
+			fi
+			xorgmodpath+=(
+				"${EROOT}/opt/amdgpu-pro/lib64/xorg/modules"
+			)
+		fi
+		# For amdgpu-pro (open-stack)
+		if [[ -d "${EROOT}/opt/amdgpu/lib64/xorg/modules" ]] ; then
+			if [[ "${libdir}" == "lib64" ]] ; then
+				ldpath=${ldpath:+${ldpath}:}${EROOT}/opt/amdgpu-pro/lib64
+			fi
+			xorgmodpath+=(
+				"${EROOT}/opt/amdgpu/lib64/xorg/modules"
+			)
+		fi
+
+		if [[ -d "${EROOT}/opt/amdgpu-pro/lib/xorg/modules" \
+			|| -d "${EROOT}/opt/amdgpu/lib/xorg/modules" \
+			|| -d "${EROOT}/opt/amdgpu-pro/lib64/xorg/modules" \
+			|| -d "${EROOT}/opt/amdgpu/lib64/xorg/modules" ]]
+		then
+			:;
+		else
+			# First make sure we have an opengl directory and this
+			# is a real lib dir, not a symlink
+			[[ -d ${PREFIX}/${libdir}/opengl && ! -h ${PREFIX}/${libdir} ]] || continue
+		fi
 
 		# Check if opengl implementation directory exists
 		# and use xorg-x11 as fallback (mesa)
