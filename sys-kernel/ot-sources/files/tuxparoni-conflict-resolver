#!/bin/bash

# Copyright 2019 Orson Teodoro <orsonteodoro@hotmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

conflict_resolver() {
	local cve_id="${1}"
	local patch_path="${2}" # original patch which can be used to revert or
				# partially apply it
	local patch_meta_path=$(echo "${patch_path}" | sed -r -e "s|\.patch$|.meta|g")
	local original_url=$(cat "${patch_meta_path}" | grep -r -e "original_url:" | cut -f2 -d $' ')
	local download_url=$(cat "${patch_meta_path}" | grep -r -e "last_url:" | cut -f2 -d $' ')
	local patch_hash=$(sha256sum "${patch_path}" | cut -f1 -d " ")
	local alterative_patch=""
	if [[ "${download_url}" == "https://lore.kernel.org/patchwork/patch/1126650/mbox/" ]] ; then
		# for CVE-2019-16089
                # not a official backport
		p="${G_CUSTOM_PATCHES_DIR}/CVE-2019-16089-fix--linux-drivers-block-nbd-v3-nbd_genl_status-null-check-for-nla_nest_start-for-4.14.x.patch"
		is_tuxparoni_patch="1"
	elif [[ "${download_url}" == "https://github.com/torvalds/linux/commit/c0a333d842ef67ac04adc72ff79dc1ccc3dca4ed.patch" ]] ; then
		# for CVE-2019-18812
		if grep -F -e \
			'strcmp(dfse->dfsentry->d_name.name, "ipc_flood_duration_ms"))' \
			"${S}/sound/soc/sof/debug.c" \
			>/dev/null
		then
                        # not a official backport
			p="${G_CUSTOM_PATCHES_DIR}/CVE-2019-18812-fix--linux-sound-soc-sof-debug-Fix-memory-leak-in-sof_dfsentry_write-for-5.3.4.patch"
			is_tuxparoni_patch="1"
		fi
	elif [[ "${download_url}" == "https://github.com/torvalds/linux/commit/09ba3bc9dd150457c506e4661380a6183af651c1.patch" \
		&& "${CVE_ALLOW_RISKY_BACKPORTS}" == "1" ]] ; then
		# 09ba for 5.1
		# for CVE-2019-18885
		if grep -F -e \
			"struct btrfs_device *btrfs_find_device(struct btrfs_fs_info *fs_info, u64 devid," \
			"${G_KERNEL_SOURCE_FOLDER}/fs/btrfs/volumes.c" \
			>/dev/null \
			&& [[ "${CVE_ALLOW_RISKY_BACKPORTS}" == 1 ]]
		then
                        # not a official backport
			p="${G_CUSTOM_PATCHES_DIR}/CVE-2019-18885-fix--linux-fs-btrfs-merge-btrfs_find_device-and-find_device-for-4.14.x.patch"
			is_tuxparoni_patch="1"
		fi
	elif [[ "${download_url}" == "https://github.com/torvalds/linux/commit/b60fe990c6b07ef6d4df67bc0530c7c90a62623a.patch" ]] ; then
		# b60fe for 5.4 5.5
		# not found in kernel/git/stable/linux.git for 4.14 so backport
		# for CVE-2019-14821
		if is_x_le_y "${G_KERNEL_VER}" "4.20" ; then
                        # not a official backport
			p="${G_CUSTOM_PATCHES_DIR}/CVE-2019-14821-fix--linux-virt-kvm-coalesced-mmio-add-bounds-checking-for-4.9.182.patch"
			is_tuxparoni_patch="1"
		fi
	fi
}
