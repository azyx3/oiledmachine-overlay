--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_fence.c.orig	2019-03-03 15:21:29.000000000 -0800
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_fence.c	2019-05-29 21:42:43.323076489 -0700
@@ -122,7 +122,7 @@ static bool amdkfd_fence_enable_signalin
 	if (dma_fence_is_signaled(f))
 		return true;
 
-	if (!kgd2kfd->schedule_evict_and_restore_process(fence->mm, f))
+	if (!kgd2kfd_schedule_evict_and_restore_process(fence->mm, f))
 		return true;
 
 	return false;
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c.orig	2019-05-29 21:40:48.048633356 -0700
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_amdkfd_gpuvm.c	2019-05-29 21:43:36.315118912 -0700
@@ -1804,7 +1804,7 @@ int amdgpu_amdkfd_evict_userptr(struct k
 	evicted_bos = atomic_inc_return(&process_info->evicted_bos);
 	if (evicted_bos == 1) {
 		/* First eviction, stop the queues */
-		r = kgd2kfd->quiesce_mm(mm);
+		r = kgd2kfd_quiesce_mm(mm);
 		if (r)
 			pr_err("Failed to quiesce KFD\n");
 		schedule_delayed_work(&process_info->restore_userptr_work,
@@ -2106,7 +2106,7 @@ static void amdgpu_amdkfd_restore_userpt
 	    evicted_bos)
 		goto unlock_out;
 	evicted_bos = 0;
-	if (kgd2kfd->resume_mm(mm)) {
+	if (kgd2kfd_resume_mm(mm)) {
 		pr_err("%s: Failed to resume KFD\n", __func__);
 		/* No recovery from this failure. Probably the CP is
 		 * hanging. No point trying again.
