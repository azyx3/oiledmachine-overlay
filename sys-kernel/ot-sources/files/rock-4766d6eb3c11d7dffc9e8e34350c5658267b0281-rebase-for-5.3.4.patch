--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c.orig	2019-10-23 13:15:12.388673887 -0700
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c	2019-10-23 13:22:40.272119869 -0700
@@ -1556,7 +1556,6 @@ static int amdgpu_vm_bo_split_mapping(st
 				      struct amdgpu_bo_va_mapping *mapping,
 				      uint64_t vram_base_offset,
 				      uint64_t flags,
-				      struct amdgpu_device *bo_adev,
 				      struct drm_mm_node *nodes,
 				      struct dma_fence **fence)
 {
@@ -1640,7 +1639,7 @@ static int amdgpu_vm_bo_split_mapping(st
 			}
 
 		} else if (flags & AMDGPU_PTE_VALID) {
-			addr += bo_adev->vm_manager.vram_base_offset;
+			addr += vram_base_offset;
 			addr += pfn << PAGE_SHIFT;
 		}
 
@@ -1677,8 +1676,6 @@ static int amdgpu_vm_bo_split_mapping(st
  */
 int amdgpu_vm_bo_update(struct amdgpu_device *adev,
 			struct amdgpu_bo_va *bo_va,
-	uint64_t vram_base_offset = adev->vm_manager.vram_base_offset;
-	struct amdgpu_device *bo_adev;
 			bool clear)
 {
 	struct amdgpu_bo *bo = bo_va->base.bo;
@@ -1689,7 +1686,8 @@ int amdgpu_vm_bo_update(struct amdgpu_de
 	struct drm_mm_node *nodes;
 	struct dma_fence *exclusive, **last_update;
 	uint64_t flags;
-	struct amdgpu_device *bo_adev = adev;
+	uint64_t vram_base_offset = adev->vm_manager.vram_base_offset;
+	struct amdgpu_device *bo_adev;
 	int r;
 
 	if (clear || !bo) {
@@ -1711,6 +1709,11 @@ int amdgpu_vm_bo_update(struct amdgpu_de
 	if (bo) {
 		flags = amdgpu_ttm_tt_pte_flags(adev, bo->tbo.ttm, mem);
 		bo_adev = amdgpu_ttm_adev(bo->tbo.bdev);
+		if (mem && mem->mem_type == TTM_PL_VRAM &&
+			adev != bo_adev) {
+			flags |= AMDGPU_PTE_SYSTEM;
+			vram_base_offset = bo_adev->gmc.aper_base;
+		}
 	} else {
 		flags = 0x0;
 	}
@@ -1730,8 +1733,8 @@ int amdgpu_vm_bo_update(struct amdgpu_de
 
 	list_for_each_entry(mapping, &bo_va->invalids, list) {
 		r = amdgpu_vm_bo_split_mapping(adev, exclusive, pages_addr, vm,
-					       mapping, flags, bo_adev, nodes,
-					       last_update);
+					       mapping, vram_base_offset, flags,
+					       nodes, last_update);
 		if (r)
 			return r;
 	}
