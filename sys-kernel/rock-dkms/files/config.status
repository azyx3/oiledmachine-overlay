#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by amdgpu-dkms $as_me 19.40, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_headers=" config/config.h"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration headers:
$config_headers

Report bugs to the package provider."

ac_cs_config="'--with-linux=/usr/src/linux-5.4.25-ot'"
ac_cs_version="\
amdgpu-dkms config.status 19.40
configured by /var/lib/dkms/amdgpu/3.1-44/build/amd/dkms/configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/usr/local/oiledmachine-overlay/sys-kernel/rock-dkms/files'
srcdir='/var/lib/dkms/amdgpu/3.1-44/build/amd/dkms'
INSTALL='/usr/bin/install -c'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/sh '/var/lib/dkms/amdgpu/3.1-44/build/amd/dkms/configure'  '--with-linux=/usr/src/linux-5.4.25-ot' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5


# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config/config.h") CONFIG_HEADERS="$CONFIG_HEADERS config/config.h" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"amdgpu-dkms\""
D["PACKAGE_TARNAME"]=" \"amdgpu-dkms\""
D["PACKAGE_VERSION"]=" \"19.40\""
D["PACKAGE_STRING"]=" \"amdgpu-dkms 19.40\""
D["PACKAGE_BUGREPORT"]=" \"\""
D["PACKAGE_URL"]=" \"\""
D["HAVE_KALLSYMS_LOOKUP_NAME"]=" 1"
D["HAVE_IN_COMPAT_SYSCALL"]=" 1"
D["HAVE_KOBJ_TO_DEV"]=" 1"
D["HAVE_DRM_ENCODER_FIND_VALID_WITH_FILE"]=" 1"
D["HAVE_DRM_NEED_SWIOTLB"]=" 1"
D["HAVE_DRM_CONNECTOR_PUT"]=" 1"
D["HAVE_DRM_CONNECTOR_UPDATE_EDID_PROPERTY"]=" 1"
D["HAVE_DRM_CONNECTOR_ATTACH_ENCODER"]=" 1"
D["HAVE_DRM_CONNECTOR_SET_PATH_PROPERTY"]=" 1"
D["HAVE_DRM_DP_CEC_CORRELATION_FUNCTIONS"]=" 1"
D["HAVE_DRM_MODESET_LOCK_ALL_CTX"]=" 1"
D["HAVE_DRM_ATOMIC_HELPER_DISABLE_ALL"]=" 1"
D["HAVE_DRM_ATOMIC_HELPER_DUPLICATE_STATE"]=" 1"
D["HAVE_DRM_ATOMIC_HELPER_SUSPEND_RESUME"]=" 1"
D["HAVE_DRM_FB_HELPER_REMOVE_CONFLICTING_PCI_FRAMEBUFFERS_PIP"]=" 1"
D["HAVE_DRM_FB_HELPER_REMOVE_CONFLICTING_PCI_FRAMEBUFFERS"]=" 1"
D["HAVE_DRM_ENCODER_INIT_VALID_WITH_NAME"]=" 1"
D["HAVE_DRM_CRTC_INIT_WITH_PLANES_VALID_WITH_NAME"]=" 1"
D["HAVE_DRM_UNIVERSAL_PLANE_INIT_9ARGS"]=" 1"
D["HAVE_DRM_GET_FORMAT_NAME_I_P"]=" 1"
D["HAVE_DRM_GEM_OBJECT_PUT_UNLOCKED"]=" 1"
D["HAVE_DRM_IS_CURRENT_MASTER"]=" 1"
D["HAVE_DRM_ATOMIC_HELPER_CONNECTOR_RESET"]=" 1"
D["HAVE_CHUNK_ID_SYNOBJ_IN_OUT"]=" 1"
D["HAVE_AMDGPU_CHUNK_ID_SCHEDULED_DEPENDENCIES"]=" 1"
D["HAVE_CHUNK_ID_SYNCOBJ_TIMELINE_WAIT_SIGNAL"]=" 1"
D["HAVE_DRM_SYNCOBJ_FIND_FENCE"]=" 1"
D["HAVE_DRM_SYNCOBJ_FIND_FENCE_5ARGS"]=" 1"
D["HAVE_DRM_SEND_EVENT_LOCKED"]=" 1"
D["HAVE_DRM_COLOR_LUT"]=" 1"
D["HAVE_DRM_COLOR_LUT_SIZE"]=" 1"
D["HAVE_DRM_ATOMIC_GET_CRTC_STATE"]=" 1"
D["HAVE_DRM_ATOMIC_GET_NEW_PLANE_STATE"]=" 1"
D["HAVE_DRM_FB_HELPER_FILL_INFO"]=" 1"
D["HAVE_DRM_DEV_PUT"]=" 1"
D["HAVE_GET_SCANOUT_POSITION_RETURN_BOOL"]=" 1"
D["HAVE_VGA_USE_UNSIGNED_INT_PIPE"]=" 1"
D["HAVE_GET_VBLANK_TIMESTAMP_IN_DRM_DRIVER_HAS_KTIME_T"]=" 1"
D["HAVE_DRM_CALC_VBLTIMESTAMP_FROM_SCANOUTPOS_USE_KTIMER_T_ARG"]=" 1"
D["HAVE_DRM_MM_PRINT"]=" 1"
D["HAVE_DRM_DEBUG_PRINTER"]=" 1"
D["HAVE_DRM_FB_HELPER_CFB_XX"]=" 1"
D["HAVE_FB_INFO_APERTURES"]=" 1"
D["HAVE_DRM_FB_HELPER_XX_FBI"]=" 1"
D["HAVE_DRM_FB_HELPER_SET_SUSPEND_UNLOCKED"]=" 1"
D["HAVE_DRM_ATOMIC_HELPER_UPDATE_LEGACY_MODESET_STATE"]=" 1"
D["HAVE_DRM_CRTC_ACCURATE_VBLANK_COUNT"]=" 1"
D["HAVE_DRM_MODE_IS_420_XXX"]=" 1"
D["HAVE_FB_OPS_FB_DEBUG_XX"]=" 1"
D["HAVE_DRM_VMA_NODE_VERIFY_ACCESS_HAS_DRM_FILE"]=" 1"
D["HAVE_DMA_FENCE_DEFINED"]=" 1"
D["HAVE_DMA_FENCE_SET_ERROR"]=" 1"
D["HAVE_DMA_FENCE_GET_STUB"]=" 1"
D["HAVE_REQUEST_FIRMWARE_DIRECT"]=" 1"
D["HAVE_KMAP_ATOMIC_ONE_ARG"]=" 1"
D["HAVE_HWMON_DEVICE_REGISTER_WITH_GROUPS"]=" 1"
D["HAVE_ARCH_IO_RESERVE_FREE_MEMTYPE_WC"]=" 1"
D["HAVE_KREF_READ"]=" 1"
D["HAVE_KTHREAD_PARK_XX"]=" 1"
D["HAVE___KTHREAD_SHOULD_PARK"]=" 1"
D["HAVE_LIST_BULK_MOVE_TAIL"]=" 1"
D["HAVE_KVCALLOC"]=" 1"
D["HAVE_KVFREE"]=" 1"
D["HAVE_KVMALLOC_ARRAY"]=" 1"
D["HAVE_KVZALLOC_KVMALLOC"]=" 1"
D["HAVE_MEMALLOC_NOFS_SAVE"]=" 1"
D["HAVE_MMGRAB"]=" 1"
D["HAVE_5ARGS_GET_USER_PAGES"]=" 1"
D["HAVE_8ARGS_GET_USER_PAGES_REMOTE"]=" 1"
D["HAVE_PFN_T"]=" 1"
D["HAVE_VMF_INSERT"]=" 1"
D["HAVE_MMU_NOTIFIER_RANGE_BLOCKABLE"]=" 1"
D["HAVE_MM_RELEASE_PAGES_2ARGS"]=" 1"
D["HAVE_PCIE_GET_SPEED_AND_WIDTH_CAP"]=" 1"
D["HAVE_PCIE_ENABLE_ATOMIC_OPS_TO_ROOT"]=" 1"
D["HAVE_PCI_UPSTREAM_BRIDGE"]=" 1"
D["HAVE_PCIE_BANDWIDTH_AVAILABLE"]=" 1"
D["HAVE_PCI_DEV_ID"]=" 1"
D["HAVE_PERF_EVENT_UPDATE_USERPAGE"]=" 1"
D["HAVE_PTRACE_PARENT"]=" 1"
D["HAVE_REGISTER_SHRINKER_RETURN_INT"]=" 1"
D["HAVE_KSYS_SYNC_HELPER"]=" 1"
D["HAVE_KTIME_GET_RAW_NS"]=" 1"
D["HAVE_KTIME_GET_BOOTTIME_NS"]=" 1"
D["HAVE_KTIME_GET_NS"]=" 1"
D["HAVE_KTIME_GET_REAL_SECONDS"]=" 1"
D["HAVE_ACCESS_OK_WITH_TWO_ARGUMENTS"]=" 1"
D["HAVE_VGA_SWITCHEROO_REGISTER_HANDLER_PC_E"]=" 1"
D["HAVE_VGA_SWITCHEROO_HANDLER_FLAGS_T_ENUM"]=" 1"
D["HAVE_VGA_SWITCHEROO_REGISTER_CLIENT_P_P_B"]=" 1"
D["HAVE_VGA_SWITCHEROO_REGISTER_CLIENT_OPS"]=" 1"
D["HAVE_WAIT_QUEUE_ENTRY"]=" 1"
D["HAVE_SYSTEM_HIGHPRI_WQ_EXPORTED"]=" 1"
D["HAVE_SYSTEM_HIGHPRI_WQ_DECLARED"]=" 1"
D["HAVE_DRM_FRAMEBUFFER_FORMAT"]=" 1"
D["HAVE_TIMER_SETUP"]=" 1"
D["HAVE_PCI_IS_THUNDERBOLD_ATTACHED"]=" 1"
D["HAVE_PCI_PCIE_TYPE"]=" 1"
D["HAVE_DMA_FENCE_GET_STUB"]=" 1"
D["HAVE_2ARGS_INVALIDATE_RANGE_START"]=" 1"
D["HAVE_IRQ_DOMAIN"]=" 1"
D["HAVE_ZONE_MANAGED_PAGES"]=" 1"
D["HAVE_ATTRIBUTE_GROUP_BIN_ATTRS"]=" 1"
D["HAVE_STRSCPY"]=" 1"
D["HAVE_DEV_PM_SET_DRIVER_FLAGS"]=" 1"
D["HAVE_ALLOC_ORDERED_WORKQUEUE"]=" 1"
D["HAVE_SI_MEM_AVAILABLE"]=" 1"
D["HAVE_GEM_FREE_OBJECT_UNLOCKED_IN_DRM_DRIVER"]=" 1"
D["HAVE_WQ_HIGHPRI"]=" 1"
D["HAVE_TYPE__POLL_T"]=" 1"
D["HAVE_HW_PERF_EVENT_CONF_MEMBER"]=" 1"
D["HAVE_TREE_INSERT_HAVE_RB_ROOT_CACHED"]=" 1"
D["HAVE_SEQ_HEX_DUMP"]=" 1"
D["HAVE_IDR_REMOVE_RETURN_VOID_POINTER"]=" 1"
D["HAVE_I2C_LOCK_OPERATIONS_STRUCT"]=" 1"
D["HAVE_BACKLIGHT_DEVICE_REGISTER_WITH_5ARGS"]=" 1"
D["HAVE_BACKLIGHT_PROPERTIES_TYPE"]=" 1"
D["HAVE_IOMMU_GET_DOMAIN_FOR_DEV"]=" 1"
D["HAVE_VM_FAULT_ADDRESS_VMA"]=" 1"
D["HAVE_HASH_FOR_EACH_XXX_DROP_NODE"]=" 1"
D["HAVE_AMD_IOMMU_PC_SUPPORTED"]=" 1"
D["HAVE_DEVM_MEMREMAP_PAGES_DEV_PAGEMAP"]=" 1"
D["HAVE_DRM_AUDIO_COMPONENT_HEADER"]=" 1"
D["HAVE_2ARGS_SET_CRC_SOURCE"]=" 1"
D["HAVE_DRM_DEVICE_DRIVER_FEATURES"]=" 1"
D["HAVE_DRM_DRV_DRIVER_ATOMIC"]=" 1"
D["HAVE_DRM_DRV_DRIVER_SYNCOBJ_TIMELINE"]=" 1"
D["HAVE_DRM_DEV_UNPLUG"]=" 1"
D["HAVE_DRM_ATOMIC_HELPER_SHUTDOWN"]=" 1"
D["HAVE_DRM_DP_MST_ALLOCATE_VCPI_P_P_I_I"]=" 1"
D["HAVE_DRM_DP_MST_GET_PUT_PORT_MALLOC"]=" 1"
D["HAVE_DP_MST_CONNECTOR_EARLY_UNREGISTER"]=" 1"
D["HAVE_DP_MST_CONNECTOR_LATE_REGISTER"]=" 1"
D["HAVE_DRM_HDMI_AVI_INFOFRAME_FROM_DISPLAY_MODE_P_P_P"]=" 1"
D["HAVE_DRM_HDMI_VENDOR_INFOFRAME_FROM_DISPLAY_MODE_P_P_P"]=" 1"
D["HAVE_DRM_ATOMIC_PRIVATE_OBJ_INIT_P_P_P_P"]=" 1"
D["HAVE_DRM_FB_HELPER_LASTCLOSE"]=" 1"
D["HAVE_DRM_MM_INSERT_MODE"]=" 1"
D["HAVE_DRM_ATOMIC_STATE_ASYNC_UPDATE"]=" 1"
D["HAVE_DRM_ATOMIC_NONBLOCKING_COMMIT"]=" 1"
D["HAVE_DRM_ATOMIC_STATE_PUT"]=" 1"
D["HAVE_DRM_DEVICE_FILELIST_MUTEX"]=" 1"
D["HAVE_DRM_CONNECTOR_LIST_ITER_BEGIN"]=" 1"
D["HAVE_DRM_DISPLAY_INFO_HDMI_SCDC_SCRAMBLING"]=" 1"
D["HAVE_DRM_CONNECTOR_HELPER_FUNCS_ATOMIC_CHECK_ARG_DRM_ATOMIC_STATE"]=" 1"
D["HAVE_DRM_DRV_GEM_PRIME_EXPORT_PI"]=" 1"
D["HAVE_DMA_RESV_H"]=" 1"
D["HAVE_DMA_RESV_SEQ"]=" 1"
D["HAVE_MMU_NOTIFIER_SYNCHRONIZE"]=" 1"
D["HAVE_MMU_NOTIFIER_PUT"]=" 1"
D["HAVE_DRM_CONNECTOR_INIT_WITH_DDC"]=" 1"
D["HAVE_DRM_GEM_OBJECT_RESV"]=" 1"
D["HAVE_STRUCT_DRM_CRTC_STATE_ASYNC_FLIP"]=" 1"
D["HAVE_DRM_GEM_OBJECT_LOOKUP_2ARGS"]=" 1"
D["HAVE_DRM_HELPER_FORCE_DISABLE_ALL"]=" 1"
D["HAVE_DRM_AMDGPU_FENCE_TO_HANDLE"]=" 1"
D["HAVE_DRM_GEM_MAP_ATTACH_2ARGS"]=" 1"
D["HAVE_DRM_GET_FORMAT_INFO"]=" 1"
D["HAVE_OVERFLOW_H"]=" 1"
D["HAVE_MM_H"]=" 1"
D["HAVE_TASK_H"]=" 1"
D["HAVE_SIGNAL_H"]=" 1"
D["HAVE_LINUX_NOSPEC_H"]=" 1"
D["HAVE_LINUX_BITS_H"]=" 1"
D["HAVE_LINUX_IO_64_NONATOMIC_LO_HI_H"]=" 1"
D["HAVE_SET_MEMORY_H"]=" 1"
D["HAVE_ASM_FPU_API_H"]=" 1"
D["HAVE_SCHED_TYPES_H"]=" 1"
D["HAVE_INTERVAL_TREE_DEFINE"]=" 1"
D["HAVE_DRM_IRQ_H"]=" 1"
D["HAVE_DRM_CONNECTOR_H"]=" 1"
D["HAVE_DRM_ENCODER_H"]=" 1"
D["HAVE_DRM_PLANE_H"]=" 1"
D["HAVE_DRM_FILE_H"]=" 1"
D["HAVE_DRM_AUTH_H"]=" 1"
D["HAVE_DRM_PRINT_H"]=" 1"
D["HAVE_DRM_ATOMIC_UAPI_HEADER"]=" 1"
D["HAVE_DRM_UTIL_H"]=" 1"
D["HAVE_DRM_PROBE_HELPER_H"]=" 1"
D["HAVE_DRM_DRV_H"]=" 1"
D["HAVE_DRM_DEVICE_H"]=" 1"
D["HAVE_DRMP_H"]=" 1"
D["HAVE_DRM_VBLANK_H"]=" 1"
D["HAVE_DRM_IOCTL_H"]=" 1"
D["HAVE_DRM_DEBUGFS_H"]=" 1"
D["HAVE_DRM_CONNECTOR_FUNCS_REGISTER"]=" 1"
D["HAVE_MUL_U32_U32"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "    :H $CONFIG_HEADERS    "
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in

  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
 ;;


  esac

done # for ac_tag


as_fn_exit 0
